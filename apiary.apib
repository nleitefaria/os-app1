FORMAT: 1A
HOST: https://os-app1-os-app1.193b.starter-ca-central-1.openshiftapps.com/rest/

# osapp1

os-app1 is a RESTful API for the ClassicModels MySQL sample database.

---
## Customers Collection [/customers]
### List all Customers [GET]
+ Response 200 (application/json)

        [
            {"customerNumber":103,"customerName":"Atelier graphique","contactLastName":"Schmitt","contactFirstName":"Carine ","phone":"40.32.2555","addressLine1":"54, rue Royale","addressLine2":null,"city":"Nantes","state":null,"postalCode":"44000","country":"France","creditLimit":21000.00}   
        ]


## Customer [/customer]
### Create a Customer [POST]
+ Request (application/json)

        {"customerNumber":103,"customerName":"Atelier graphique","contactLastName":"Schmitt","contactFirstName":"Carine ","phone":"40.32.2555","addressLine1":"54, rue Royale","addressLine2":null,"city":"Nantes","state":null,"postalCode":"44000","country":"France","creditLimit":21000.00}   
        

+ Response 201 (application/json)

    + Body

            {"customerNumber":103,"customerName":"Atelier graphique","contactLastName":"Schmitt","contactFirstName":"Carine ","phone":"40.32.2555","addressLine1":"54, rue Royale","addressLine2":null,"city":"Nantes","state":null,"postalCode":"44000","country":"France","creditLimit":21000.00}   
        
## Customer [/customer/{id}]

+ Parameters
    + id (required, String, `103`) ... `id` of the Customer to perform action with.

### Retrieve a Customer [GET]
+ Response 200 (application/json)

    + Body

            {"customerNumber":103,"customerName":"Atelier graphique","contactLastName":"Schmitt","contactFirstName":"Carine ","phone":"40.32.2555","addressLine1":"54, rue Royale","addressLine2":null,"city":"Nantes","state":null,"postalCode":"44000","country":"France","creditLimit":21000.00}   

### Update a Customer [PUT]
+ Request (application/json)

        {"customerNumber":103,"customerName":"Atelier graphique","contactLastName":"Schmitt","contactFirstName":"Carine ","phone":"40.32.2555","addressLine1":"54, rue Royale","addressLine2":null,"city":"Nantes","state":null,"postalCode":"44000","country":"France","creditLimit":21000.00}   

+ Response 200 (application/json)

        {"customerNumber":103,"customerName":"Atelier graphique","contactLastName":"Schmitt","contactFirstName":"Carine ","phone":"40.32.2555","addressLine1":"54, rue Royale","addressLine2":null,"city":"Nantes","state":null,"postalCode":"44000","country":"France","creditLimit":21000.00}   

### Remove a Customer [DELETE]
+ Response 204



## Employees Collection [/employees]
### List all Employees [GET]
+ Response 200 (application/json)

        [
            {"employeeNumber":1002,"lastName":"Murphy","firstName":"Diane","extension":"x5800","email":"dmurphy@classicmodelcars.com","jobTitle":"President"}
        ]

## Employee [/employee]
### Create a Employee [POST]
+ Request (application/json)

        {"employeeNumber":1002,"lastName":"Murphy","firstName":"Diane","extension":"x5800","email":"dmurphy@classicmodelcars.com","jobTitle":"President"}

+ Response 201 (application/json)

    + Body

            {"employeeNumber":1002,"lastName":"Murphy","firstName":"Diane","extension":"x5800","email":"dmurphy@classicmodelcars.com","jobTitle":"President"}

## Employee [/employee/{id}]

+ Parameters
    + id (required, String, `103`) ... `id` of the Customer to perform action with.

### Retrieve a Employee [GET]
+ Response 200 (application/json)

    + Body

            {"employeeNumber":1002,"lastName":"Murphy","firstName":"Diane","extension":"x5800","email":"dmurphy@classicmodelcars.com","jobTitle":"President"}

### Update a Employee [PUT]
+ Request (application/json)

        {"employeeNumber":1002,"lastName":"Murphy","firstName":"Diane","extension":"x5800","email":"dmurphy@classicmodelcars.com","jobTitle":"President"}

+ Response 200 (application/json)

        {"employeeNumber":1002,"lastName":"Murphy","firstName":"Diane","extension":"x5800","email":"dmurphy@classicmodelcars.com","jobTitle":"President"}

### Remove a Employee [DELETE]
+ Response 204


## Offices Collection [/offices]
### List all Offices [GET]

+ Response 200 (application/json)

        [
            
        ]
        
### Create a Office [POST]
+ Request (application/json)

        {}

+ Response 201 (application/json)

        {}      

        
## Office [/offices/{id}]

+ Parameters
    + id (required, String, `103`) ... `id` of the Office to perform action with.

### Retrieve a Office [GET]
+ Response 200 (application/json)

    + Body

            {} 
            
### Update a Office [PUT]
+ Request (application/json)

        {}
        
+ Response 200 (application/json)

        {}

### Remove a Office [DELETE]
+ Response 204        


## Orderdetails Collection [/orderdetails]
### List all Orderdetails [GET]

+ Response 200 (application/json)

        [
            
        ]

### Create a Orderdetails [POST]
+ Request (application/json)

        {}

+ Response 201 (application/json)

        {}
        
## Orderdetail [/orderdetails/{id}]

+ Parameters
    + id (required, String, `103`) ... `id` of the Orderdetails to perform action with.

### Retrieve a Orderdetail [GET]
+ Response 200 (application/json)

    + Body

            {}

### Update a Orderdetail [PUT]
+ Request (application/json)

        {}
        
+ Response 200 (application/json)

        {}
        
### Remove a Orderdetail [DELETE]
+ Response 204 
        
## Orders Collection [/orders]
### List all Orders [GET]

+ Response 200 (application/json)

        [
            
        ]
        
### Create a Order [POST]
+ Request (application/json)

        {}

+ Response 201 (application/json)

        {}      
        
## Order [/orders/{id}]

+ Parameters
    + id (required, String, `103`) ... `id` of the Order to perform action with.

### Retrieve a Order [GET]
+ Response 200 (application/json)

    + Body

            {}

### Update a Order [PUT]
+ Request (application/json)

        {}
        
+ Response 200 (application/json)

        {}
        
### Remove a Order [DELETE]
+ Response 204

## Productlines Collection [/productlines]
### List all Productlines [GET]

+ Response 200 (application/json)

        [
            
        ]
        
### Create a Productline [POST]
+ Request (application/json)

        {}

+ Response 201 (application/json)

        {}   
        
        
## Productline [/productlines/{id}]

+ Parameters
    + id (required, String, `103`) ... `id` of the Productline to perform action with.

### Retrieve a Productline [GET]
+ Response 200 (application/json)

    + Body

            {}

### Update a Productline [PUT]
+ Request (application/json)

        {}
        
+ Response 200 (application/json)

        {}
        
### Remove a Productline [DELETE]
+ Response 204       

## Products Collection [/products]
### List all Products [GET]

+ Response 200 (application/json)

        [
            
        ]
        
### Create a Product [POST]
+ Request (application/json)

        {}

+ Response 201 (application/json)

        {}  

## Product [/products/{id}]

+ Parameters
    + id (required, String, `103`) ... `id` of the Product to perform action with.

### Retrieve a Product [GET]
+ Response 200 (application/json)

    + Body

            {}

### Update a Product [PUT]
+ Request (application/json)

        {}
        
+ Response 200 (application/json)

        {}
        
### Remove a Product [DELETE]
+ Response 204
